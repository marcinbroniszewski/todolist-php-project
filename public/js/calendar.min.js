"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var u,i={},t=Object.prototype,s=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(u){a=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o,a,i,c,e=e&&e.prototype instanceof v?e:v,e=Object.create(e.prototype),n=new E(n||[]);return l(e,"_invoke",{value:(o=t,a=r,i=n,c=f,function(t,e){if(c===d)throw new Error("Generator is already running");if(c===p){if("throw"===t)throw e;return{value:u,done:!0}}for(i.method=t,i.arg=e;;){var r=i.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(o===u)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=u,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),m;n=h(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,m;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=u),r.delegate=null,m):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}(r,i);if(r){if(r===m)continue;return r}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(c===f)throw c=p,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c=d;r=h(o,a,i);if("normal"===r.type){if(c=i.done?p:y,r.arg===m)continue;return{value:r.arg,done:i.done}}"throw"===r.type&&(c=p,i.method="throw",i.arg=r.arg)}})}),e}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var f="suspendedStart",y="suspendedYield",d="executing",p="completed",m={};function v(){}function g(){}function b(){}var e={},w=(a(e,n,function(){return this}),Object.getPrototypeOf),w=w&&w(w(A([]))),L=(w&&w!==t&&s.call(w,n)&&(e=w),b.prototype=v.prototype=Object.create(e));function _(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function x(i,c){var e;l(this,"_invoke",{value:function(r,n){function t(){return new c(function(t,e){!function e(t,r,n,o){var a,t=h(i[t],i,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&s.call(r,"__await")?c.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):c.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function S(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function D(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(S,this),this.reset(!0)}function A(e){if(e||""===e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=u,t.done=!0,t}).next=t}throw new TypeError(_typeof(e)+" is not iterable")}return l(L,"constructor",{value:g.prototype=b,configurable:!0}),l(b,"constructor",{value:g,configurable:!0}),g.displayName=a(b,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,a(t,o,"GeneratorFunction")),t.prototype=Object.create(L),t},i.awrap=function(t){return{__await:t}},_(x.prototype),a(x.prototype,r,function(){return this}),i.AsyncIterator=x,i.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new x(c(t,e,r,n),o);return i.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},_(L),a(L,o,"Generator"),a(L,n,function(){return this}),a(L,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=A,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=u,this.done=!1,this.delegate=null,this.method="next",this.arg=u,this.tryEntries.forEach(D),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=u)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=u),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=s.call(o,"catchLoc"),c=s.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),D(r),m}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,D(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:A(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=u),m}},i}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var r;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(r="Object"===(r=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _iterableToArrayLimit(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],u=!0,s=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){s=!0,o=t}finally{try{if(!u&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function asyncGeneratorStep(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,r){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var date,year,month,day,currentMonth,monthYearDate=document.querySelector(".month-year"),numericDays=document.querySelector(".numeric-days"),prevMonthBtn=document.querySelector(".prev-month-btn"),nextMonthBtn=document.querySelector(".next-month-btn"),fullDate=new Date,currentDay=fullDate.getDate();function fetchDataFromSession(){return _fetchDataFromSession.apply(this,arguments)}function _fetchDataFromSession(){return(_fetchDataFromSession=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e,r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch("../app/includes/get_session_data.inc.php");case 3:if((e=t.sent).ok){t.next=6;break}throw new Error("Błąd pobierania danych: "+e.status);case 6:return t.next=8,e.json();case 8:(r=t.sent).error?console.error(r.error):(r=r.date.split("-"),r=_slicedToArray(r,3),year=r[0],month=r[1],day=r[2],year=Number(year),month=Number(month),day=Number(day),currentMonth=Number(month),createCalendar(year,month,day)),t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error("Błąd pobierania danych:",t.t0.message);case 15:case"end":return t.stop()}},t,null,[[0,12]])}))).apply(this,arguments)}fetchDataFromSession();var setMonthYearDate=function(t,e){monthYearDate.innerHTML="".concat(["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"][t]," ").concat(e)},createCalendar=function(e,r){for(var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,n=(setMonthYearDate(r-1,e),new Date(e,r-1,1).getDay()),o=(0===n&&(n=7),new Date(e,r,0).getDate()),a=new Date(e,r-1,0).getDate(),i="<tr>",c=0,u=a-n+2;u<=a;u++)7===c&&(i+="</tr><tr>",c=0),i+='<td class="prev-month-day date">'.concat(u,"</td>"),c++;for(var s=1;s<=o;s++)7===c&&(i+="</tr><tr>",c=0),i+=(s===t?'<td class="date active">':'<td class="date">').concat(s,"</td>"),c++;if(0!==c){for(var l=7-c,h=1;h<=l;h++)i+='<td class="next-month-day date">'.concat(h,"</td>"),c++;c=0}numericDays.innerHTML=i+="</tr></tbody></table>",document.querySelectorAll(".date").forEach(function(t){return t.addEventListener("click",function(t){return selectDate(e,r,t)})})},selectPrevMonth=function(){1===month?(month=12,year--):month--,createCalendar(year,month),month===currentMonth&&setActiveDate(day)},selectNextMonth=function(){12===month?(month=1,year++):month++,createCalendar(year,month),month===currentMonth&&setActiveDate(day)},setActiveDate=function(e){var t=document.querySelectorAll(".date"),t=Array.from(t).find(function(t){return t.textContent===e.toString()&&!t.classList.contains("prev-month-day")&&!t.classList.contains("next-month-day")});t&&t.classList.add("active")},selectDate=function(t,e,r){var n=Number(r.target.textContent),r=(r.target.classList.contains("next-month-day")&&12===e?(e=1,t++):r.target.classList.contains("next-month-day")?e++:r.target.classList.contains("prev-month-day")&&1===e?(e=12,t--):r.target.classList.contains("prev-month-day")&&e--,"".concat(t,"-").concat(e,"-").concat(n));sendDateData(r)},sendDateData=function(t){fetch("../app/includes/selected_date.inc.php",{method:"POST",headers:{"Content-type":"application/x-www-form-urlencoded"},body:"date="+t}).then(function(){return location.reload()}).catch(function(t){console.error("Wystąpił błąd:",t)})};prevMonthBtn.addEventListener("click",selectPrevMonth),nextMonthBtn.addEventListener("click",selectNextMonth);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLmpzIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJlIiwidCIsInIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwiaCIsImYiLCJFcnJvciIsInMiLCJkb25lIiwibWV0aG9kIiwiYXJnIiwiZGVsZWdhdGUiLCJtYXliZUludm9rZURlbGVnYXRlIiwiVHlwZUVycm9yIiwieSIsInRyeUNhdGNoIiwidHlwZSIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwicCIsImwiLCJjYWxsIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsImQiLCJ0aGlzIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiaW52b2tlIiwiX3R5cGVvZiIsInJlc29sdmUiLCJfX2F3YWl0IiwidGhlbiIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsImtleXMiLCJyZXZlcnNlIiwicG9wIiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJ2YWwiLCJoYW5kbGUiLCJjb21wbGV0ZSIsImZpbmlzaCIsImNhdGNoIiwiZGVsZWdhdGVZaWVsZCIsIl9zbGljZWRUb0FycmF5IiwiYXJyIiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJBcnJheSIsImZyb20iLCJ0ZXN0IiwibGVuIiwiYXJyMiIsImlzQXJyYXkiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZWplY3QiLCJfbmV4dCIsIl90aHJvdyIsImtleSIsImluZm8iLCJlcnJvciIsIl9hc3luY1RvR2VuZXJhdG9yIiwiZm4iLCJzZWxmIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiZXJyIiwidW5kZWZpbmVkIiwiZGF0ZSIsIm1vbnRoWWVhckRhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJudW1lcmljRGF5cyIsInByZXZNb250aEJ0biIsIm5leHRNb250aEJ0biIsImZ1bGxEYXRlIiwiY3VycmVudERheSIsImZldGNoRGF0YUZyb21TZXNzaW9uIiwiX2NhbGxlZSIsInJlc3BvbnNlIiwiX2RhdGEkZGF0ZSRzcGxpdDIiLCJfY29udGV4dCIsInN0YXR1cyIsImN1cnJlbnRNb250aCIsImRhdGEiLCJtb250aCIsIl9mZXRjaERhdGFGcm9tU2Vzc2lvbiIsImNvbnNvbGUiLCJfZGF0YSRkYXRlJHNwbGl0IiwieWVhciIsImRheSIsIk51bWJlciIsInQwIiwibWVzc2FnZSIsInNldE1vbnRoWWVhckRhdGUiLCJpbm5lckhUTUwiLCJjb25jYXQiLCJjcmVhdGVDYWxlbmRhciIsInNlbGVjdGVkRGF5IiwiZmlyc3REYXkiLCJEYXRlIiwiZ2V0RGF5IiwibGFzdERheSIsImdldERhdGUiLCJsYXN0RGF5T2ZMYXN0TW9udGgiLCJ0YWJsZUhUTUwiLCJkYXlDb3VudGVyIiwibGVmdERheXMiLCJ0ZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZWxlY3RQcmV2TW9udGgiLCJ0ZEVsZW1lbnRzIiwic2V0QWN0aXZlRGF0ZSIsInNlbGVjdE5leHRNb250aCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmaW5kIiwidGV4dENvbnRlbnQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInRkQWN0aXZlIiwidGRBcnJheSIsInNlbGVjdERhdGUiLCJ0YXJnZXQiLCJzZW5kRGF0ZURhdGEiLCJmZXRjaCIsIkNvbnRlbnQtdHlwZSIsImJvZHkiLCJsb2NhdGlvbiJdLCJtYXBwaW5ncyI6IjZSQUNBQSxvQkFBQSxXQUFBLE9BQUFDLENBQUEsRUFBQSxJQUFBQyxFQUFBRCxFQUFBLEdBQUFFLEVBQUFDLE9BQUFDLFVBQUFDLEVBQUFILEVBQUFJLGVBQUFDLEVBQUFKLE9BQUFLLGdCQUFBLFNBQUFQLEVBQUFELEVBQUFFLEdBQUFELEVBQUFELEdBQUFFLEVBQUFPLEtBQUEsRUFBQUMsRUFBQSxZQUFBLE9BQUFDLE9BQUFBLE9BQUEsR0FBQUMsRUFBQUYsRUFBQUcsVUFBQSxhQUFBQyxFQUFBSixFQUFBSyxlQUFBLGtCQUFBQyxFQUFBTixFQUFBTyxhQUFBLGdCQUFBLFNBQUFDLEVBQUFqQixFQUFBRCxFQUFBRSxHQUFBLE9BQUFDLE9BQUFLLGVBQUFQLEVBQUFELEVBQUEsQ0FBQVMsTUFBQVAsRUFBQWlCLFdBQUEsQ0FBQSxFQUFBQyxhQUFBLENBQUEsRUFBQUMsU0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBcEIsRUFBQUQsRUFBQSxDQUFBLElBQUFrQixFQUFBLEdBQUEsRUFBQSxDQUFBLENBQUEsTUFBQWpCLEdBQUFpQixFQUFBLFNBQUFqQixFQUFBRCxFQUFBRSxH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YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vbnRoLXllYXInKTtcclxuY29uc3QgbnVtZXJpY0RheXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubnVtZXJpYy1kYXlzJyk7XHJcbmNvbnN0IHByZXZNb250aEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcmV2LW1vbnRoLWJ0bicpO1xyXG5jb25zdCBuZXh0TW9udGhCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV4dC1tb250aC1idG4nKTtcclxuXHJcbmNvbnN0IGZ1bGxEYXRlID0gbmV3IERhdGUoKTtcclxuXHJcbmxldCBjdXJyZW50RGF5ID0gZnVsbERhdGUuZ2V0RGF0ZSgpO1xyXG4vLyBsZXQgbW9udGggPSBmdWxsRGF0ZS5nZXRNb250aCgpO1xyXG4vLyBsZXQgeWVhciA9IGZ1bGxEYXRlLmdldEZ1bGxZZWFyKCk7XHJcblxyXG5sZXQgZGF0ZSwgeWVhciwgbW9udGgsIGRheSwgY3VycmVudE1vbnRoXHJcblxyXG5hc3luYyBmdW5jdGlvbiBmZXRjaERhdGFGcm9tU2Vzc2lvbigpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnLi4vYXBwL2luY2x1ZGVzL2dldF9zZXNzaW9uX2RhdGEuaW5jLnBocCcpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCxYLEhWQgcG9iaWVyYW5pYSBkYW55Y2g6ICcgKyByZXNwb25zZS5zdGF0dXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgICAgaWYgKGRhdGEuZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihkYXRhLmVycm9yKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG5cdFx0XHRbeWVhciwgbW9udGgsIGRheV0gPSBkYXRhLmRhdGUuc3BsaXQoXCItXCIpXHJcblx0XHRcdHllYXIgPSBOdW1iZXIoeWVhcilcclxuXHRcdFx0bW9udGggPSBOdW1iZXIobW9udGgpXHJcblx0XHRcdGRheSA9IE51bWJlcihkYXkpXHJcblx0XHRcdGN1cnJlbnRNb250aCA9IE51bWJlcihtb250aClcdFxyXG4gICAgICAgICAgICBjcmVhdGVDYWxlbmRhcih5ZWFyLCBtb250aCwgZGF5KVxyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignQsWCxIVkIHBvYmllcmFuaWEgZGFueWNoOicsIGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mZXRjaERhdGFGcm9tU2Vzc2lvbigpXHJcblxyXG5jb25zdCBzZXRNb250aFllYXJEYXRlID0gKG1vbnRoLCB5ZWFyKSA9PiB7XHJcblx0Y29uc3QgbW9udGhOYW1lcyA9IFtcclxuXHRcdCdTdHljemXFhCcsXHJcblx0XHQnTHV0eScsXHJcblx0XHQnTWFyemVjJyxcclxuXHRcdCdLd2llY2llxYQnLFxyXG5cdFx0J01haicsXHJcblx0XHQnQ3plcndpZWMnLFxyXG5cdFx0J0xpcGllYycsXHJcblx0XHQnU2llcnBpZcWEJyxcclxuXHRcdCdXcnplc2llxYQnLFxyXG5cdFx0J1Bhxbpkemllcm5paycsXHJcblx0XHQnTGlzdG9wYWQnLFxyXG5cdFx0J0dydWR6aWXFhCcsXHJcblx0XTtcclxuXHRjb25zdCBtb250aE5hbWUgPSBtb250aE5hbWVzW21vbnRoXTtcclxuXHRtb250aFllYXJEYXRlLmlubmVySFRNTCA9IGAke21vbnRoTmFtZX0gJHt5ZWFyfWA7XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVDYWxlbmRhciA9ICh5ZWFyLCBtb250aCwgc2VsZWN0ZWREYXkgPSBudWxsKSA9PiB7XHJcblx0c2V0TW9udGhZZWFyRGF0ZShtb250aCAtIDEsIHllYXIpO1xyXG5cclxuXHRsZXQgZmlyc3REYXkgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCAtIDEsIDEpLmdldERheSgpO1xyXG5cdGZpcnN0RGF5ID09PSAwICYmIChmaXJzdERheSA9IDcpO1xyXG5cdGNvbnN0IGxhc3REYXkgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpO1xyXG5cdGNvbnN0IGxhc3REYXlPZkxhc3RNb250aCA9IG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgMCkuZ2V0RGF0ZSgpO1xyXG5cclxuXHRsZXQgdGFibGVIVE1MID0gJzx0cj4nO1xyXG5cclxuXHRjb25zdCBzdGFydFByZXZNb250aERheSA9IGxhc3REYXlPZkxhc3RNb250aCAtIGZpcnN0RGF5ICsgMjtcclxuXHJcblx0bGV0IGRheUNvdW50ZXIgPSAwO1xyXG5cdC8vRG9kYXdhbmllIGRuaSB6IHBvcHJ6ZWRuaWVnbyBtaWVzacSFY2FcclxuXHRmb3IgKGxldCBpID0gc3RhcnRQcmV2TW9udGhEYXk7IGkgPD0gbGFzdERheU9mTGFzdE1vbnRoOyBpKyspIHtcclxuXHRcdGlmIChkYXlDb3VudGVyID09PSA3KSB7XHJcblx0XHRcdHRhYmxlSFRNTCArPSAnPC90cj48dHI+JztcclxuXHJcblx0XHRcdGRheUNvdW50ZXIgPSAwO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRhYmxlSFRNTCArPSBgPHRkIGNsYXNzPVwicHJldi1tb250aC1kYXkgZGF0ZVwiPiR7aX08L3RkPmA7XHJcblxyXG5cdFx0ZGF5Q291bnRlcisrO1xyXG5cdH1cclxuXHQvL0RvZGF3YW5pZSBkbmkgeiBha3R1YWxuZWdvIG1pZXNpxIVjYVxyXG5cdGZvciAobGV0IGkgPSAxOyBpIDw9IGxhc3REYXk7IGkrKykge1xyXG5cdFx0aWYgKGRheUNvdW50ZXIgPT09IDcpIHtcclxuXHRcdFx0dGFibGVIVE1MICs9ICc8L3RyPjx0cj4nO1xyXG5cclxuXHRcdFx0ZGF5Q291bnRlciA9IDA7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGkgPT09IHNlbGVjdGVkRGF5KSB7XHJcblx0XHRcdHRhYmxlSFRNTCArPSBgPHRkIGNsYXNzPVwiZGF0ZSBhY3RpdmVcIj4ke2l9PC90ZD5gO1xyXG5cdFx0fSAgZWxzZSB7XHJcblx0XHRcdHRhYmxlSFRNTCArPSBgPHRkIGNsYXNzPVwiZGF0ZVwiPiR7aX08L3RkPmA7XHJcblx0XHR9XHJcblx0XHRkYXlDb3VudGVyKys7XHJcblx0fVxyXG4vL1x0RG9kYXdhbmllIGRuaSB6IG5hc3RlcG5lZ28gbWllc2nEhWNhXHJcblx0aWYgKGRheUNvdW50ZXIgIT09IDApIHtcclxuXHRcdGNvbnN0IGxlZnREYXlzID0gNyAtIGRheUNvdW50ZXI7XHJcblxyXG5cdFx0Zm9yIChsZXQgaSA9IDE7IGkgPD0gbGVmdERheXM7IGkrKykge1xyXG5cdFx0XHR0YWJsZUhUTUwgKz0gYDx0ZCBjbGFzcz1cIm5leHQtbW9udGgtZGF5IGRhdGVcIj4ke2l9PC90ZD5gO1xyXG5cclxuXHRcdFx0ZGF5Q291bnRlcisrO1xyXG5cdFx0fVxyXG5cdFx0ZGF5Q291bnRlciA9IDA7XHJcblx0fVxyXG5cclxuXHR0YWJsZUhUTUwgKz0gJzwvdHI+PC90Ym9keT48L3RhYmxlPic7XHJcblx0bnVtZXJpY0RheXMuaW5uZXJIVE1MID0gdGFibGVIVE1MO1xyXG5cclxuXHQvL1VzdGF3aWFuaWUgbGlzdGVuZXLDs3cgbmEgZGF0eVxyXG5cdGNvbnN0IHRkRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGF0ZScpO1xyXG5cdHRkRWxlbWVudHMuZm9yRWFjaCh0ZCA9PiB0ZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4gc2VsZWN0RGF0ZSh5ZWFyLCBtb250aCwgZSkpKTtcclxufTtcclxuXHJcbi8vV3liaWVyYW5pZSBpbm55Y2ggbWllc2nEmWN5XHJcbmNvbnN0IHNlbGVjdFByZXZNb250aCA9ICgpID0+IHtcclxuLy8gXHRsZXQgc3RvcmVkRGF0ZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N0b3JlZERhdGUnKSkgfHwgeyB5ZWFyLCBtb250aCB9O1xyXG4vLyBjb25zdCBzZWxlY3RlZERhdGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzZWxlY3RlZERhdGUnKSlcclxuXHRpZiAobW9udGggPT09IDEpIHtcclxuXHRcdG1vbnRoID0gMTI7XHJcblx0XHR5ZWFyLS07XHJcblx0fSBlbHNlIHtcclxuXHRcdG1vbnRoLS07XHJcblx0fVxyXG5cclxuXHQvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc3RvcmVkRGF0ZScsIEpTT04uc3RyaW5naWZ5KHN0b3JlZERhdGUpKTtcclxuXHRjcmVhdGVDYWxlbmRhcih5ZWFyLCBtb250aCk7XHJcblxyXG5cdGlmIChtb250aCA9PT0gY3VycmVudE1vbnRoKSB7XHJcblx0XHRzZXRBY3RpdmVEYXRlKGRheSk7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3Qgc2VsZWN0TmV4dE1vbnRoID0gKCkgPT4ge1xyXG5cclxuXHRpZiAobW9udGggPT09IDEyKSB7XHJcblx0XHRtb250aCA9IDE7XHJcblx0XHR5ZWFyKys7XHJcblx0fSBlbHNlIHtcclxuXHRcdG1vbnRoKys7XHJcblx0fVxyXG5cclxuXHQvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc3RvcmVkRGF0ZScsIEpTT04uc3RyaW5naWZ5KHN0b3JlZERhdGUpKTtcclxuXHRjcmVhdGVDYWxlbmRhcih5ZWFyLCBtb250aCk7XHJcblxyXG5cdGlmIChtb250aCA9PT0gY3VycmVudE1vbnRoKSB7XHJcblx0XHRzZXRBY3RpdmVEYXRlKGRheSk7XHJcblx0fVxyXG59O1xyXG5cclxuLy8gVXN0YXdpZW5pZSBha3R5d25laiBkYXR5IGplxZtsaSB3eWJyYW55IG1pZXNpxIVjIGplc3QgcsOzd255IGFrdHVhbG5lbXVcclxuY29uc3Qgc2V0QWN0aXZlRGF0ZSA9IChzZWxlY3RlZERheSkgPT4ge1xyXG5cclxuXHRjb25zdCB0ZEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRhdGUnKTtcclxuXHRjb25zdCB0ZEFycmF5ID0gQXJyYXkuZnJvbSh0ZEVsZW1lbnRzKTtcclxuXHJcblx0Y29uc3QgdGRBY3RpdmUgPSB0ZEFycmF5LmZpbmQoXHJcblx0XHR0ZCA9PlxyXG5cdFx0XHR0ZC50ZXh0Q29udGVudCA9PT0gc2VsZWN0ZWREYXkudG9TdHJpbmcoKSAmJlxyXG5cdFx0XHQhdGQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwcmV2LW1vbnRoLWRheScpICYmXHJcblx0XHRcdCF0ZC5jbGFzc0xpc3QuY29udGFpbnMoJ25leHQtbW9udGgtZGF5JylcclxuXHQpO1xyXG5cclxuXHRpZiAodGRBY3RpdmUpIHtcclxuXHRcdHRkQWN0aXZlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG5cdH1cclxufTtcclxuXHJcbi8vV3liaWVyYW5pZSB6YWRhxYQgeiBpbm5laiBkYXR5XHJcbmNvbnN0IHNlbGVjdERhdGUgPSAoeWVhciwgbW9udGgsIGUpID0+IHtcclxuXHRsZXQgZGF5ID0gTnVtYmVyKGUudGFyZ2V0LnRleHRDb250ZW50KTtcclxuXHJcblx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbmV4dC1tb250aC1kYXknKSAmJiBtb250aCA9PT0gMTIpIHtcclxuXHRcdG1vbnRoID0gMTtcclxuXHRcdHllYXIrKztcclxuXHR9IGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbmV4dC1tb250aC1kYXknKSkge1xyXG5cdFx0bW9udGgrKztcclxuXHR9IGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncHJldi1tb250aC1kYXknKSAmJiBtb250aCA9PT0gMSkge1xyXG5cdG1vbnRoID0gMTJcclxueWVhci0tO1xyXG5cdH0gZWxzZSBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwcmV2LW1vbnRoLWRheScpKSB7XHJcbm1vbnRoLS07XHJcblx0fVxyXG5cdGNvbnN0IGRhdGUgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gO1xyXG5cclxuXHRzZW5kRGF0ZURhdGEoZGF0ZSk7XHJcbn07XHJcblxyXG4vL1d5c3nFgmFuaWUgZGFueWNoXHJcbmNvbnN0IHNlbmREYXRlRGF0YSA9IGRhdGUgPT4ge1xyXG5cdGZldGNoKCcuLi9hcHAvaW5jbHVkZXMvc2VsZWN0ZWRfZGF0ZS5pbmMucGhwJywge1xyXG5cdFx0bWV0aG9kOiAnUE9TVCcsXHJcblx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdCdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcclxuXHRcdH0sXHJcblx0XHRib2R5OiAnZGF0ZT0nICsgZGF0ZSxcclxuXHR9KVxyXG5cdFx0LnRoZW4oKCkgPT4gbG9jYXRpb24ucmVsb2FkKCkpXHJcblx0XHQuY2F0Y2goZXJyb3IgPT4ge1xyXG5cdFx0XHRjb25zb2xlLmVycm9yKCdXeXN0xIVwacWCIGLFgsSFZDonLCBlcnJvcik7XHJcblx0XHR9KTtcclxufTtcclxuXHJcbi8vYWRkRXZlbnRMaXN0ZW5lcid5XHJcbnByZXZNb250aEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGVjdFByZXZNb250aCk7XHJcbm5leHRNb250aEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGVjdE5leHRNb250aCk7XHJcbiJdfQ==

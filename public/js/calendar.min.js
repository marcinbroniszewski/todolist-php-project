"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var u,i={},t=Object.prototype,s=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(u){a=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o,a,i,c,e=e&&e.prototype instanceof v?e:v,e=Object.create(e.prototype),n=new E(n||[]);return l(e,"_invoke",{value:(o=t,a=r,i=n,c=f,function(t,e){if(c===d)throw new Error("Generator is already running");if(c===p){if("throw"===t)throw e;return{value:u,done:!0}}for(i.method=t,i.arg=e;;){var r=i.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(o===u)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=u,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),m;n=h(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,m;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=u),r.delegate=null,m):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}(r,i);if(r){if(r===m)continue;return r}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(c===f)throw c=p,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c=d;r=h(o,a,i);if("normal"===r.type){if(c=i.done?p:y,r.arg===m)continue;return{value:r.arg,done:i.done}}"throw"===r.type&&(c=p,i.method="throw",i.arg=r.arg)}})}),e}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var f="suspendedStart",y="suspendedYield",d="executing",p="completed",m={};function v(){}function g(){}function b(){}var e={},w=(a(e,n,function(){return this}),Object.getPrototypeOf),w=w&&w(w(k([]))),L=(w&&w!==t&&s.call(w,n)&&(e=w),b.prototype=v.prototype=Object.create(e));function x(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function _(i,c){var e;l(this,"_invoke",{value:function(r,n){function t(){return new c(function(t,e){!function e(t,r,n,o){var a,t=h(i[t],i,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&s.call(r,"__await")?c.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):c.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function S(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function D(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(S,this),this.reset(!0)}function k(e){if(e||""===e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=u,t.done=!0,t}).next=t}throw new TypeError(_typeof(e)+" is not iterable")}return l(L,"constructor",{value:g.prototype=b,configurable:!0}),l(b,"constructor",{value:g,configurable:!0}),g.displayName=a(b,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,a(t,o,"GeneratorFunction")),t.prototype=Object.create(L),t},i.awrap=function(t){return{__await:t}},x(_.prototype),a(_.prototype,r,function(){return this}),i.AsyncIterator=_,i.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new _(c(t,e,r,n),o);return i.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},x(L),a(L,o,"Generator"),a(L,n,function(){return this}),a(L,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=k,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=u,this.done=!1,this.delegate=null,this.method="next",this.arg=u,this.tryEntries.forEach(D),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=u)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=u),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=s.call(o,"catchLoc"),c=s.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),D(r),m}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,D(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:k(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=u),m}},i}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var r;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(r="Object"===(r=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _iterableToArrayLimit(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,a,i,c=[],u=!0,s=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=a.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){s=!0,o=t}finally{try{if(!u&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function asyncGeneratorStep(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,r){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var date,year,month,day,currentMonth,monthYearDate=document.querySelector(".month-year"),numericDays=document.querySelector(".numeric-days"),prevMonthBtn=document.querySelector(".prev-month-btn"),nextMonthBtn=document.querySelector(".next-month-btn");function fetchDataFromSession(){return _fetchDataFromSession.apply(this,arguments)}function _fetchDataFromSession(){return(_fetchDataFromSession=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e,r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch("../app/includes/get_session_data.inc.php");case 3:if((e=t.sent).ok){t.next=6;break}throw new Error("Błąd pobierania danych: "+e.status);case 6:return t.next=8,e.json();case 8:(r=t.sent).error?console.error(r.error):(r=r.date.split("-"),r=_slicedToArray(r,3),year=r[0],month=r[1],day=r[2],year=Number(year),month=Number(month),day=Number(day),currentMonth=Number(month),createCalendar(year,month,day)),t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error("Błąd pobierania danych:",t.t0.message);case 15:case"end":return t.stop()}},t,null,[[0,12]])}))).apply(this,arguments)}fetchDataFromSession();var setMonthYearDate=function(t,e){var r,n,o,a,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;i&&(r=document.querySelector(".day-date"),a=(o=new Date).getFullYear(),n=o.getMonth()+1,o=o.getDate(),t===a&&e===n&&i===o?r.textContent="Dzisiaj, "+i:t===a&&e===n&&i===o-1?r.textContent="Wczoraj, "+i:t===a&&e===n&&i===o+1?r.textContent="Jutro, "+i:(a=new Date(t,e-1,i).getDay(),console.log(a),r.textContent="".concat(["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"][a],", ").concat(i)));monthYearDate.innerHTML="".concat(["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"][e-1]," ").concat(t)},createCalendar=function(e,r){for(var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,n=(setMonthYearDate(e,r,t),new Date(e,r-1,1).getDay()),o=(0===n&&(n=7),new Date(e,r,0).getDate()),a=new Date(e,r-1,0).getDate(),i="<tr>",c=0,u=a-n+2;u<=a;u++)7===c&&(i+="</tr><tr>",c=0),i+='<td class="prev-month-day date">'.concat(u,"</td>"),c++;for(var s=1;s<=o;s++)7===c&&(i+="</tr><tr>",c=0),i+=(s===t?'<td class="date active">':'<td class="date">').concat(s,"</td>"),c++;if(0!==c){for(var l=7-c,h=1;h<=l;h++)i+='<td class="next-month-day date">'.concat(h,"</td>"),c++;c=0}numericDays.innerHTML=i+="</tr></tbody></table>",document.querySelectorAll(".date").forEach(function(t){return t.addEventListener("click",function(t){return selectDate(e,r,t)})})},selectPrevMonth=function(){1===month?(month=12,year--):month--,createCalendar(year,month),month===currentMonth&&setActiveDate(day)},selectNextMonth=function(){12===month?(month=1,year++):month++,createCalendar(year,month),month===currentMonth&&setActiveDate(day)},setActiveDate=function(e){var t=document.querySelectorAll(".date"),t=Array.from(t).find(function(t){return t.textContent===e.toString()&&!t.classList.contains("prev-month-day")&&!t.classList.contains("next-month-day")});t&&t.classList.add("active")},selectDate=function(t,e,r){var n=Number(r.target.textContent),r=(r.target.classList.contains("next-month-day")&&12===e?(e=1,t++):r.target.classList.contains("next-month-day")?e++:r.target.classList.contains("prev-month-day")&&1===e?(e=12,t--):r.target.classList.contains("prev-month-day")&&e--,"".concat(t,"-").concat(e,"-").concat(n));sendDateData(r)},sendDateData=function(t){fetch("../app/includes/selected_date.inc.php",{method:"POST",headers:{"Content-type":"application/x-www-form-urlencoded"},body:"date="+t}).then(function(){return location.reload()}).catch(function(t){console.error("Wystąpił błąd:",t)})};prevMonthBtn.addEventListener("click",selectPrevMonth),nextMonthBtn.addEventListener("click",selectNextMonth);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
